note *
note * This build file is in the Make Abstract Machine (MAM) language. It was
note * first generated by nmake, but in the ksh 93u+m distribution we maintain
note * it manually because nmake had too many problems to keep using. The
note * Mamfiles are processed by mamake (src/cmd/INIT/mamake.c); we added
note * indentation to improve readability. The language is documented in
note * src/cmd/INIT/README-mamake.md.
note *
setv MAMAKE_STRICT
setv INSTALLROOT ../../..
setv PACKAGEROOT ../../../../..
setv CC cc
setv mam_cc_FLAGS
setv CCFLAGS ${-debug-symbols?1?${mam_cc_DEBUG} -D_BLD_DEBUG?${mam_cc_OPTIMIZE}?}
setv CCLDFLAGS ${-strip-symbols?1?${mam_cc_LD_STRIP}??}
setv LDFLAGS
note *
note * initialization for the build system
note *
make install virtual
	make iffe
		prev iffe.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make mktest
		prev mktest.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make regress
		prev regress.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make crossexec
		prev crossexec.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make mkreq
		prev mkreq.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make mkreq-maplib
		prev mkreq-maplib.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make mprobe
		prev mprobe.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make probe
		make probe.sh
			prev C+probe
			prev make.probe
			exec - cat ${^} > ${@}
		done
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	make ${INSTALLROOT}/bin
		exec - mkdir -p ${@}
	done
	make ${INSTALLROOT}/bin/iffe
		prev iffe
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/bin/mkreq
		prev mkreq
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/bin/mktest
		prev mktest
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/bin/regress
		prev regress
		exec - cp -f ${<} ${@}
	done
	make ${PACKAGEROOT}/bin
		exec - mkdir -p ${PACKAGEROOT}/bin
	done
	make ${INSTALLROOT}/bin/crossexec
		prev crossexec
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/bin/proto
		note *
		note * proto(1) has been removed, but install a backward compatibility stub
		note * that allows old Mamfiles containing proto commands to keep working.
		note *
		prev proto.sh
		exec - cp ${<} ${@} && chmod u+w,+x ${@}
	done
	note *
	note * ksh93 function search on PATH
	note * ksh93 builtin command library -lcmd
	note * ksh93 ld library path search on PATH
	note *
	make ${INSTALLROOT}/bin/.paths
		exec -	if	test ! -f ${INSTALLROOT}/bin/.paths -o -w ${INSTALLROOT}/bin/.paths
		exec -	then	N='
		exec -	'
		exec -		H=${mam_cc_HOSTTYPE}
		exec -		P=""	# TODO? reimplement nmake original: P="$(-mam:??$(.GETCONF LIBPATH:/:/ /G:/,/ : /G:Q)?)"
		exec -		b= f= h= l= n= p= u= B= L=
		exec -		set : $P
		exec -		while	:
		exec -		do	while	:
		exec -			do	case $1 in
		exec -				'')	break 2 ;;
		exec -				:)	shift; break ;;
		exec -				esac
		exec -				shift
		exec -			done
		exec -			case $# in
		exec -			0|1)	break ;;
		exec -			esac
		exec -			case $L in
		exec -			?*)	L="$L|" ;;
		exec -			esac
		exec -			L="$L$2=*"
		exec -			B=$1
		exec -		done
		exec -		if	test -f ${INSTALLROOT}/bin/.paths
		exec -		then	while	read x
		exec -			do	case $x in
		exec -				*\$\(\"*) # to fix 2012-06-18 edit botch #
		exec -					break ;;
		exec -				'#'?*)	case $h in
		exec -					'')	h=$x ;;
		exec -					esac ;;
		exec -				$L)	l=$x ;;
		exec -				*BUILTIN_LIB=*)
		exec -					b=$x ;;
		exec -				*FPATH=*)
		exec -					f=$x ;;
		exec -				*PLUGIN_LIB=*)
		exec -					p=$x ;;
		exec -				*)	case $u in
		exec -					?*)	 u=$u$N ;;
		exec -					esac
		exec -					u=$u$x ;;
		exec -				esac
		exec -			done < ${INSTALLROOT}/bin/.paths
		exec -		fi
		exec -		ifs=$IFS
		exec -		m=
		exec -		case $p in
		exec -		?*)	b= ;;
		exec -		esac
		exec -		case $b in
		exec -		?*)	IFS='='
		exec -			set $b
		exec -			IFS=$ifs
		exec -			shift
		exec -			p="PLUGIN_LIB=$*"
		exec -			case $b in
		exec -			[Nn][Oo]*)
		exec -				p=no$p ;;
		exec -			esac
		exec -			m=1 ;;
		exec -		esac
		exec -		case $f in
		exec -		'')	f="FPATH=../fun"
		exec -			m=1 ;;
		exec -		esac
		exec -		case $h in
		exec -		'')	h='# use { no NO } prefix to permanently disable #' ;;
		exec -		esac
		exec -		case $l in
		exec -		'')	set x x : $P
		exec -			l=
		exec -			while	:
		exec -			do	while	:
		exec -				do	case $# in
		exec -					0)	break ;;
		exec -					esac
		exec -					x=$1
		exec -					shift
		exec -					case $x in
		exec -					:)	break ;;
		exec -					esac
		exec -				done
		exec -				case $# in
		exec -				0|1)	break ;;
		exec -				2)	l=$2 ;;
		exec -				*)	case "$H" in
		exec -					$3) l=$2; break ;;
		exec -					esac ;;
		exec -				esac
		exec -			done
		exec -			case $l in
		exec -			'')	if	test -x /lib/dld.sl
		exec -				then	l=SHLIB_PATH
		exec -				elif	test -x /usr/lib/dyld
		exec -				then	l=DYLD_LIBRARY_PATH
		exec -				else	case "$H" in
		exec -					ibm.*|mvs.*)
		exec -						l=LIBPATH ;;
		exec -					sgi.mips3)
		exec -						l=LD_LIBRARYN32_PATH ;;
		exec -					sgi.mips4)
		exec -						l=LD_LIBRARYN64_PATH	;;
		exec -					*)	l=LD_LIBRARY_PATH ;;
		exec -					esac
		exec -				fi ;;
		exec -			esac
		exec -			case $l in
		exec -			?*)	case $B in
		exec -				'')	B=lib ;;
		exec -				esac
		exec -				l="$l=../$B"
		exec -				m=1 ;;
		exec -			esac ;;
		exec -		esac
		exec -		case $p in
		exec -		'')	p="PLUGIN_LIB=cmd"
		exec -			case '' in
		exec -			'') p=no$p ;;
		exec -			esac
		exec -			m=1 ;;
		exec -		esac
		exec -		case $m in
		exec -		1)	case $u in
		exec -			?*)	u=$N$u ;;
		exec -			esac
		exec -			echo "$h$N$p$N$f$N$l$u" > ${INSTALLROOT}/bin/.paths ;;
		exec -		esac
		exec -	fi
	done
	note *
	note * probe initialization
	note *
	make ${INSTALLROOT}/lib/probe/C
		exec - mkdir -p ${@}
	done
	make ${INSTALLROOT}/lib/probe/C/probe
		prev C+probe
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/lib/probe/C/make
		exec - mkdir -p ${@}
	done
	make ${INSTALLROOT}/lib/probe/C/pp
		exec - mkdir -p ${@}
	done
	make ${INSTALLROOT}/lib/probe/C/mam
		exec - mkdir -p ${@}
	done
	make ${INSTALLROOT}/lib/probe/C/mam/probe
		prev mprobe
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/lib/probe/C/mam/mprobe
		prev mprobe
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/lib/probe/C/make/probe
		prev probe
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/include/ast
		exec - mkdir -p ${@}
	done
	make ${INSTALLROOT}/lib/lib
		exec - mkdir -p ${@}
	done
	note *
	note * check if -ldl is required
	note *
	note * NOTE: this works around the sgi botch:
	note *	 (1) irix 5.* made -ldl optional but warned
	note *	 (2) irix 6.* has no -ldl
	note *	 (3) dynamic progs built on irix 5.* and using -ldl fail
	note *           at runtime on irix 6.* because -ldl is not there
	note *
	make ${INSTALLROOT}/lib/lib/dl
		make dl.req
			prev dl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : dl : dl.c : dl
		done
		exec - cp -f ${<} ${@}
	done
	note *
	note * requiring these is a botch
	note *
	make ${INSTALLROOT}/lib/lib/iconv
		make iconv.req
			prev iconv.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : iconv : iconv.c : iconv
		done
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/lib/lib/w
		make w.req
			prev w.c
			prev w2.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : w : w.c w2.c : w
		done
		exec - cp -f ${<} ${@}
	done
	note *
	note * miscellaneous -l* checks
	note *
	make ${INSTALLROOT}/lib/lib/intl
		make intl.req
			prev intl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : intl : intl.c : intl
		done
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/lib/lib/m
		make m.req
			prev m.c
			prev m2.c
			prev m3.c
			prev m4.c
			prev m5.c
			prev m6.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : m : m.c m2.c m3.c m4.c m5.c m6.c : m
		done
		exec - cp -f ${<} ${@}
	done
	make ${INSTALLROOT}/lib/lib/nsl
		make nsl.req
			prev nsl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : nsl : nsl.c : nsl
		done
		exec - cp -f ${<} ${@}
	done
	note *
	note * what was sco smoking
	note * almost all of gethost* are in -lnsl except gethostbyname which
	note * is in -lsocket which isn't needed to resolve socket() but seems
	note * to do the -lnsl job
	note *
	make ${INSTALLROOT}/lib/lib/socket
		make socket.req
			prev socket.c
			prev nsl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : socket : socket.c nsl.c : socket
		done
		exec - cp -f ${<} ${@}
	done
	note *
	note * more substance abuse
	note * gdbm's ndbm "compatibility" doesn't supply <ndbm.h>, instead supplies
	note * <gdbm/ndbm.h> which provides K&R prototypes *and* it requires -lgdbm
	note * some <ndbm.h> implementations use -lndbm, others -ldbm, still others -lc
	note * this is why unix is starting to look like windows
	note * this map allows makefiles to use -ldbm on all systems
	note *
	note * and this just in: sometimes its <gdbm-ndbm.h> and possibly -lgdbm_compat
	note *
	note * at least the -l* buck stops here
	note *
	make ${INSTALLROOT}/lib/lib/dbm
		make dbm.req
			prev db.c
			prev gdbm.c
			prev gdbm1.c
			prev gdbm2.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : dbm : db.c gdbm.c gdbm1.c gdbm2.c : db gdbm_compat gdbm ndbm dbm
		done
		exec - cp -f ${<} ${@}
	done
done install
make test dontcare virtual
	make test.iffe virtual
		prev iffe.tst
		exec - regress ${<} iffe
	done
	make test.mamake virtual
		prev mamake.tst
		exec - : testing non-libast mamake at $PWD/mamake :
		exec - regress ${<} mamake
	done
done test
