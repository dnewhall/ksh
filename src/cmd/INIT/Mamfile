note *
note * This build file is in the Make Abstract Machine (MAM) language. It was
note * first generated by nmake, but in the ksh 93u+m distribution we maintain
note * it manually because nmake had too many problems to keep using. The
note * Mamfiles are processed by mamake (src/cmd/INIT/mamake.c); we added
note * indentation to improve readability. The language is documented in
note * src/cmd/INIT/README-mamake.md.
note *
setv MAMAKE_STRICT
setv INSTALLROOT ../../..
setv PACKAGEROOT ../../../../..
setv CC cc
setv mam_cc_FLAGS
setv CCFLAGS ${-debug-symbols?1?${mam_cc_DEBUG} -D_BLD_DEBUG?${mam_cc_OPTIMIZE}?}
setv CCLDFLAGS ${-strip-symbols?1?${mam_cc_LD_STRIP}??}
setv COTEMP $$
setv LDFLAGS
note *
note * initialization for all packages
note *
make install
	make iffe
		prev iffe.sh
		exec - ${STDCP} iffe.sh iffe
		exec - test -w iffe -a -x iffe || ${STDCHMOD} u+w,+x iffe
	done iffe generated
	make mktest
		prev mktest.sh
		exec - ${STDCP} mktest.sh mktest
		exec - test -w mktest -a -x mktest || ${STDCHMOD} u+w,+x mktest
	done mktest generated
	make package
		prev package.sh
		exec - ${STDCP} package.sh package
		exec - test -w package -a -x package || ${STDCHMOD} u+w,+x package
	done package generated
	make regress
		prev regress.sh
		exec - ${STDCP} regress.sh regress
		exec - test -w regress -a -x regress || ${STDCHMOD} u+w,+x regress
	done regress generated
	make crossexec
		prev crossexec.sh
		exec - ${STDCP} crossexec.sh crossexec
		exec - test -w crossexec -a -x crossexec || ${STDCHMOD} u+w,+x crossexec
	done crossexec generated
	make mamake
		make mamake.o
			make mamake.c
				prev shlib-compat.h implicit dontcare virtual
				prev ast.h implicit dontcare virtual
			done mamake.c
			exec - ${CC} ${mam_cc_FLAGS} ${CCFLAGS} -c mamake.c
		done mamake.o generated
		exec - ${CC} ${CCLDFLAGS} ${mam_cc_FLAGS} ${CCFLAGS} ${LDFLAGS} -o mamake mamake.o
	done mamake generated
	make mkreq
		prev mkreq.sh
		exec - ${STDCP} mkreq.sh mkreq
		exec - test -w mkreq -a -x mkreq || ${STDCHMOD} u+w,+x mkreq
	done mkreq generated
	make mkreq-maplib
		prev mkreq-maplib.sh
		exec - ${STDCP} mkreq-maplib.sh mkreq-maplib
		exec - test -w mkreq-maplib -a -x mkreq-maplib || ${STDCHMOD} u+w,+x mkreq-maplib
	done mkreq-maplib generated
	make mprobe
		prev mprobe.sh
		exec - ${STDCP} mprobe.sh mprobe
		exec - test -w mprobe -a -x mprobe || ${STDCHMOD} u+w,+x mprobe
	done mprobe generated
	make probe
		make probe.sh
			prev C+probe
			prev make.probe
			exec - ${STDCAT} C+probe make.probe > probe.sh
		done probe.sh generated
		exec - ${STDCP} probe.sh probe
		exec - test -w probe -a -x probe || ${STDCHMOD} u+w,+x probe
	done probe generated
	make ${INSTALLROOT}/bin
		exec - if test ! -d ${INSTALLROOT}/bin
		exec - then mkdir -p ${INSTALLROOT}/bin
		exec - fi
	done ${INSTALLROOT}/bin generated
	make ${INSTALLROOT}/bin/iffe
		prev iffe
		exec - ${STDCMP} 2>/dev/null -s iffe ${INSTALLROOT}/bin/iffe || { ${STDMV} ${INSTALLROOT}/bin/iffe ${INSTALLROOT}/bin/iffe.old 2>/dev/null || true; ${STDCP} iffe ${INSTALLROOT}/bin/iffe ;}
	done ${INSTALLROOT}/bin/iffe generated
	make ${INSTALLROOT}/bin/mkreq
		prev mkreq
		exec - ${STDCMP} 2>/dev/null -s mkreq ${INSTALLROOT}/bin/mkreq || { ${STDMV} ${INSTALLROOT}/bin/mkreq ${INSTALLROOT}/bin/mkreq.old 2>/dev/null || true; ${STDCP} mkreq ${INSTALLROOT}/bin/mkreq ;}
	done ${INSTALLROOT}/bin/mkreq generated
	make ${INSTALLROOT}/bin/mktest
		prev mktest
		exec - ${STDCMP} 2>/dev/null -s mktest ${INSTALLROOT}/bin/mktest || { ${STDMV} ${INSTALLROOT}/bin/mktest ${INSTALLROOT}/bin/mktest.old 2>/dev/null || true; ${STDCP} mktest ${INSTALLROOT}/bin/mktest ;}
	done ${INSTALLROOT}/bin/mktest generated
	make ${INSTALLROOT}/bin/package
		prev package
		exec - ${STDCMP} 2>/dev/null -s package ${INSTALLROOT}/bin/package || { ${STDMV} ${INSTALLROOT}/bin/package ${INSTALLROOT}/bin/package.old 2>/dev/null || true; ${STDCP} package ${INSTALLROOT}/bin/package ;}
	done ${INSTALLROOT}/bin/package generated
	make ${INSTALLROOT}/bin/regress
		prev regress
		exec - ${STDCMP} 2>/dev/null -s regress ${INSTALLROOT}/bin/regress || { ${STDMV} ${INSTALLROOT}/bin/regress ${INSTALLROOT}/bin/regress.old 2>/dev/null || true; ${STDCP} regress ${INSTALLROOT}/bin/regress ;}
	done ${INSTALLROOT}/bin/regress generated
	make ${PACKAGEROOT}/bin
		exec - if test ! -d ${PACKAGEROOT}/bin
		exec - then mkdir -p ${PACKAGEROOT}/bin
		exec - fi
	done ${PACKAGEROOT}/bin generated
	make ${PACKAGEROOT}/bin/package
		prev package
		exec - ${STDCMP} 2>/dev/null -s package ${PACKAGEROOT}/bin/package || { ${STDMV} ${PACKAGEROOT}/bin/package ${PACKAGEROOT}/bin/package.old 2>/dev/null || true; ${STDCP} package ${PACKAGEROOT}/bin/package ;}
	done ${PACKAGEROOT}/bin/package generated
	make ${INSTALLROOT}/bin/crossexec
		prev crossexec
		exec - ${STDCMP} 2>/dev/null -s crossexec ${INSTALLROOT}/bin/crossexec || { ${STDMV} ${INSTALLROOT}/bin/crossexec ${INSTALLROOT}/bin/crossexec.old 2>/dev/null || true; ${STDCP} crossexec ${INSTALLROOT}/bin/crossexec ;}
	done ${INSTALLROOT}/bin/crossexec generated
	make ${INSTALLROOT}/bin/mamake
		prev mamake
		exec - ${STDCMP} 2>/dev/null -s mamake ${INSTALLROOT}/bin/mamake || { ${STDMV} ${INSTALLROOT}/bin/mamake ${INSTALLROOT}/bin/mamake.old 2>/dev/null || true; ${STDCP} mamake ${INSTALLROOT}/bin/mamake ;}
	done ${INSTALLROOT}/bin/mamake generated
	make __proto_stub
		note *
		note * proto(1) has been removed, but install a backward compatibility stub
		note * that allows old Mamfiles containing proto commands to keep working.
		note *
		exec - src=${PACKAGEROOT}/src/cmd/INIT/proto.sh
		exec - dst=${INSTALLROOT}/bin/proto
		exec - ${STDCMP} 2>/dev/null -s $src $dst || { ${STDMV} $dst $dst.old 2>/dev/null || true; ${STDCP} $src $dst ;}
		exec - test -w $dst && test -x $dst || ${STDCHMOD} u+w,+x $dst
	done __proto_stub dontcare virtual
	note *
	note * ksh93 function search on PATH
	note * ksh93 builtin command library -lcmd
	note * ksh93 ld library path search on PATH
	note *
	make ${INSTALLROOT}/bin/.paths
		exec - if test ! -f ${INSTALLROOT}/bin/.paths -o -w ${INSTALLROOT}/bin/.paths
		exec - then N='
		exec - '
		exec - H=${mam_cc_HOSTTYPE}
		exec - P=""
		exec - b= f= h= l= n= p= u= B= L=
		exec - set : $P
		exec - while :
		exec - do while :
		exec - do case $1 in
		exec - '') break 2 ;;
		exec - :) shift; break ;;
		exec - esac
		exec - shift
		exec - done
		exec - case $# in
		exec - 0|1) break ;;
		exec - esac
		exec - case $L in
		exec - ?*) L="$L|" ;;
		exec - esac
		exec - L="$L$2=*"
		exec - B=$1
		exec - done
		exec - if test -f ${INSTALLROOT}/bin/.paths
		exec - then while read x
		exec - do case $x in
		exec - *\$\(\"*) break
		exec - ;;
		exec - '#'?*) case $h in
		exec - '') h=$x ;;
		exec - esac
		exec - ;;
		exec - $L) l=$x
		exec - ;;
		exec - *BUILTIN_LIB=*) b=$x
		exec - ;;
		exec - *FPATH=*) f=$x
		exec - ;;
		exec - *PLUGIN_LIB=*) p=$x
		exec - ;;
		exec - *) case $u in
		exec - ?*) u=$u$N ;;
		exec - esac
		exec - u=$u$x
		exec - ;;
		exec - esac
		exec - done < ${INSTALLROOT}/bin/.paths
		exec - fi
		exec - ifs=$IFS
		exec - m=
		exec - case $p in
		exec - ?*) b=
		exec - ;;
		exec - esac
		exec - case $b in
		exec - ?*) IFS='='
		exec - set $b
		exec - IFS=$ifs
		exec - shift
		exec - p="PLUGIN_LIB=$*"
		exec - case $b in
		exec - [Nn][Oo]*) p=no$p ;;
		exec - esac
		exec - m=1
		exec - ;;
		exec - esac
		exec - case $f in
		exec - '') f="FPATH=../fun"
		exec - m=1
		exec - ;;
		exec - esac
		exec - case $h in
		exec - '') h='# use { no NO } prefix to permanently disable #' ;;
		exec - esac
		exec - case $l in
		exec - '') set x x : $P
		exec - l=
		exec - while :
		exec - do while :
		exec - do case $# in
		exec - 0) break ;;
		exec - esac
		exec - x=$1
		exec - shift
		exec - case $x in
		exec - :) break ;;
		exec - esac
		exec - done
		exec - case $# in
		exec - 0|1) break
		exec - ;;
		exec - 2) l=$2
		exec - ;;
		exec - *) case "$H" in
		exec - $3) l=$2; break ;;
		exec - esac
		exec - ;;
		exec - esac
		exec - done
		exec - case $l in
		exec - '') if test -x /lib/dld.sl
		exec - then l=SHLIB_PATH
		exec - elif test -x /usr/lib/dyld
		exec - then l=DYLD_LIBRARY_PATH
		exec - else case "$H" in
		exec - ibm.*|mvs.*)
		exec - l=LIBPATH
		exec - ;;
		exec - sgi.mips3)
		exec - l=LD_LIBRARYN32_PATH
		exec - ;;
		exec - sgi.mips4)
		exec - l=LD_LIBRARYN64_PATH
		exec - ;;
		exec - *) l=LD_LIBRARY_PATH
		exec - ;;
		exec - esac
		exec - fi
		exec - ;;
		exec - esac
		exec - case $l in
		exec - ?*) case $B in
		exec - '') B=lib ;;
		exec - esac
		exec - l="$l=../$B"
		exec - m=1
		exec - ;;
		exec - esac
		exec - ;;
		exec - esac
		exec - case $p in
		exec - '') p="PLUGIN_LIB=cmd"
		exec - case '' in
		exec - '') p=no$p ;;
		exec - esac
		exec - m=1
		exec - ;;
		exec - esac
		exec - case $m in
		exec - 1) case $u in
		exec - ?*) u=$N$u ;;
		exec - esac
		exec - echo "$h$N$p$N$f$N$l$u" > ${INSTALLROOT}/bin/.paths
		exec - ;;
		exec - esac
		exec - fi
	done ${INSTALLROOT}/bin/.paths generated
	note *
	note * probe initialization
	note *
	make ${INSTALLROOT}/lib/probe/C
		exec - if test ! -d ${INSTALLROOT}/lib/probe/C
		exec - then mkdir -p ${INSTALLROOT}/lib/probe/C
		exec - fi
	done ${INSTALLROOT}/lib/probe/C generated
	make ${INSTALLROOT}/lib/probe/C/probe
		prev ${INSTALLROOT}/lib/probe/C
		prev C+probe
		exec - ${STDCMP} 2>/dev/null -s C+probe ${INSTALLROOT}/lib/probe/C/probe || { ${STDMV} ${INSTALLROOT}/lib/probe/C/probe ${INSTALLROOT}/lib/probe/C/probe.old 2>/dev/null || true; ${STDCP} C+probe ${INSTALLROOT}/lib/probe/C/probe ;}
	done ${INSTALLROOT}/lib/probe/C/probe generated
	make ${INSTALLROOT}/lib/probe/C/make
		exec - if test ! -d ${INSTALLROOT}/lib/probe/C/make
		exec - then mkdir -p ${INSTALLROOT}/lib/probe/C/make
		exec - fi
	done ${INSTALLROOT}/lib/probe/C/make generated
	make ${INSTALLROOT}/lib/probe/C/pp
		exec - if test ! -d ${INSTALLROOT}/lib/probe/C/pp
		exec - then mkdir -p ${INSTALLROOT}/lib/probe/C/pp
		exec - fi
	done ${INSTALLROOT}/lib/probe/C/pp generated
	make ${INSTALLROOT}/lib/probe/C/mam
		exec - if test ! -d ${INSTALLROOT}/lib/probe/C/mam
		exec - then mkdir -p ${INSTALLROOT}/lib/probe/C/mam
		exec - fi
	done ${INSTALLROOT}/lib/probe/C/mam generated
	make ${INSTALLROOT}/lib/probe/C/mam/probe
		prev ${INSTALLROOT}/lib/probe/C/mam
		prev mprobe
		exec - ${STDCMP} 2>/dev/null -s mprobe ${INSTALLROOT}/lib/probe/C/mam/probe || { ${STDMV} ${INSTALLROOT}/lib/probe/C/mam/probe ${INSTALLROOT}/lib/probe/C/mam/probe.old 2>/dev/null || true; ${STDCP} mprobe ${INSTALLROOT}/lib/probe/C/mam/probe ;}
	done ${INSTALLROOT}/lib/probe/C/mam/probe generated
	make ${INSTALLROOT}/lib/probe/C/mam/mprobe
		prev mprobe
		exec - ${STDCMP} 2>/dev/null -s mprobe ${INSTALLROOT}/lib/probe/C/mam/mprobe || { ${STDMV} ${INSTALLROOT}/lib/probe/C/mam/mprobe ${INSTALLROOT}/lib/probe/C/mam/mprobe.old 2>/dev/null || true; ${STDCP} mprobe ${INSTALLROOT}/lib/probe/C/mam/mprobe ;}
	done ${INSTALLROOT}/lib/probe/C/mam/mprobe generated
	make ${INSTALLROOT}/lib/probe/C/make/probe
		prev probe
		exec - ${STDCMP} 2>/dev/null -s probe ${INSTALLROOT}/lib/probe/C/make/probe || { ${STDMV} ${INSTALLROOT}/lib/probe/C/make/probe ${INSTALLROOT}/lib/probe/C/make/probe.old 2>/dev/null || true; ${STDCP} probe ${INSTALLROOT}/lib/probe/C/make/probe ;}
	done ${INSTALLROOT}/lib/probe/C/make/probe generated
	make ${INSTALLROOT}/include/ast
		exec - if test ! -d ${INSTALLROOT}/include/ast
		exec - then mkdir -p ${INSTALLROOT}/include/ast
		exec - fi
	done ${INSTALLROOT}/include/ast generated
	make ${INSTALLROOT}/lib/lib
		exec - if test ! -d ${INSTALLROOT}/lib/lib
		exec - then mkdir -p ${INSTALLROOT}/lib/lib
		exec - fi
	done ${INSTALLROOT}/lib/lib generated
	note *
	note * check if -ldl is required
	note *
	note * NOTE: this works around the sgi botch:
	note *	 (1) irix 5.* made -ldl optional but warned
	note *	 (2) irix 6.* has no -ldl
	note *	 (3) dynamic progs built on irix 5.* and using -ldl fail
	note *           at runtime on irix 6.* because -ldl is not there
	note *
	make ${INSTALLROOT}/lib/lib/dl
		prev ${INSTALLROOT}/lib/lib
		make dl.req
			prev dl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : dl : dl.c : dl
		done dl.req generated
		exec - ${STDCMP} 2>/dev/null -s dl.req ${INSTALLROOT}/lib/lib/dl || { ${STDMV} ${INSTALLROOT}/lib/lib/dl ${INSTALLROOT}/lib/lib/dl.old 2>/dev/null || true; ${STDCP} dl.req ${INSTALLROOT}/lib/lib/dl ;}
	done ${INSTALLROOT}/lib/lib/dl generated
	note *
	note * requiring these is a botch
	note *
	make ${INSTALLROOT}/lib/lib/iconv
		make iconv.req
			prev iconv.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : iconv : iconv.c : iconv
		done iconv.req generated
		exec - ${STDCMP} 2>/dev/null -s iconv.req ${INSTALLROOT}/lib/lib/iconv || { ${STDMV} ${INSTALLROOT}/lib/lib/iconv ${INSTALLROOT}/lib/lib/iconv.old 2>/dev/null || true; ${STDCP} iconv.req ${INSTALLROOT}/lib/lib/iconv ;}
	done ${INSTALLROOT}/lib/lib/iconv generated
	make ${INSTALLROOT}/lib/lib/w
		make w.req
			prev w.c
			prev w2.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : w : w.c w2.c : w
		done w.req generated
		exec - ${STDCMP} 2>/dev/null -s w.req ${INSTALLROOT}/lib/lib/w || { ${STDMV} ${INSTALLROOT}/lib/lib/w ${INSTALLROOT}/lib/lib/w.old 2>/dev/null || true; ${STDCP} w.req ${INSTALLROOT}/lib/lib/w ;}
	done ${INSTALLROOT}/lib/lib/w generated
	note *
	note * miscellaneous -l* checks
	note *
	make ${INSTALLROOT}/lib/lib/intl
		make intl.req
			prev intl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : intl : intl.c : intl
		done intl.req generated
		exec - ${STDCMP} 2>/dev/null -s intl.req ${INSTALLROOT}/lib/lib/intl || { ${STDMV} ${INSTALLROOT}/lib/lib/intl ${INSTALLROOT}/lib/lib/intl.old 2>/dev/null || true; ${STDCP} intl.req ${INSTALLROOT}/lib/lib/intl ;}
	done ${INSTALLROOT}/lib/lib/intl generated
	make ${INSTALLROOT}/lib/lib/m
		make m.req
			prev m.c
			prev m2.c
			prev m3.c
			prev m4.c
			prev m5.c
			prev m6.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : m : m.c m2.c m3.c m4.c m5.c m6.c : m
		done m.req generated
		exec - ${STDCMP} 2>/dev/null -s m.req ${INSTALLROOT}/lib/lib/m || { ${STDMV} ${INSTALLROOT}/lib/lib/m ${INSTALLROOT}/lib/lib/m.old 2>/dev/null || true; ${STDCP} m.req ${INSTALLROOT}/lib/lib/m ;}
	done ${INSTALLROOT}/lib/lib/m generated
	make ${INSTALLROOT}/lib/lib/nsl
		make nsl.req
			prev nsl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : nsl : nsl.c : nsl
		done nsl.req generated
		exec - ${STDCMP} 2>/dev/null -s nsl.req ${INSTALLROOT}/lib/lib/nsl || { ${STDMV} ${INSTALLROOT}/lib/lib/nsl ${INSTALLROOT}/lib/lib/nsl.old 2>/dev/null || true; ${STDCP} nsl.req ${INSTALLROOT}/lib/lib/nsl ;}
	done ${INSTALLROOT}/lib/lib/nsl generated
	note *
	note * what was sco smoking
	note * almost all of gethost* are in -lnsl except gethostbyname which
	note * is in -lsocket which isn't needed to resolve socket() but seems
	note * to do the -lnsl job
	note *
	make ${INSTALLROOT}/lib/lib/socket
		make socket.req
			prev socket.c
			prev nsl.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : socket : socket.c nsl.c : socket
		done socket.req generated
		exec - ${STDCMP} 2>/dev/null -s socket.req ${INSTALLROOT}/lib/lib/socket || { ${STDMV} ${INSTALLROOT}/lib/lib/socket ${INSTALLROOT}/lib/lib/socket.old 2>/dev/null || true; ${STDCP} socket.req ${INSTALLROOT}/lib/lib/socket ;}
	done ${INSTALLROOT}/lib/lib/socket generated
	note *
	note * more substance abuse
	note * gdbm's ndbm "compatibility" doesn't supply <ndbm.h>, instead supplies
	note * <gdbm/ndbm.h> which provides K&R prototypes *and* it requires -lgdbm
	note * some <ndbm.h> implementations use -lndbm, others -ldbm, still others -lc
	note * this is why unix is starting to look like windows
	note * this map allows makefiles to use -ldbm on all systems
	note *
	note * and this just in: sometimes its <gdbm-ndbm.h> and possibly -lgdbm_compat
	note *
	note * at least the -l* buck stops here
	note *
	make ${INSTALLROOT}/lib/lib/dbm
		make dbm.req
			prev db.c
			prev gdbm.c
			prev gdbm1.c
			prev gdbm2.c
			prev mkreq-maplib
			exec - mkreq-maplib ${CC} : dbm : db.c gdbm.c gdbm1.c gdbm2.c : db gdbm_compat gdbm ndbm dbm
		done dbm.req generated
		exec - ${STDCMP} 2>/dev/null -s dbm.req ${INSTALLROOT}/lib/lib/dbm || { ${STDMV} ${INSTALLROOT}/lib/lib/dbm ${INSTALLROOT}/lib/lib/dbm.old 2>/dev/null || true; ${STDCP} dbm.req ${INSTALLROOT}/lib/lib/dbm ;}
	done ${INSTALLROOT}/lib/lib/dbm generated
done install virtual
make test
	make test.iffe
		prev iffe.tst
		exec - exec "$SHELL" "$INSTALLROOT/bin/regress" iffe.tst iffe
	done test.iffe virtual
	make test.mamake
		make mamake.tst
			prev mamake.rt
			exec - if test mamake.rt -nt mamake.tst
			exec - then "$SHELL" "$INSTALLROOT/bin/mktest" --style=regress mamake.rt > mamake.tst
			exec - fi
		done mamake.tst generated
		exec - exec "$SHELL" "$INSTALLROOT/bin/regress" mamake.tst mamake
	done test.mamake virtual
done test dontcare virtual
